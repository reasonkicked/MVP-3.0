name: Deploy Kubernetes

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      application_instance:
        required: true
        type: string
      require_apply_approval:
        required: false
        type: string
        default: "false"
    secrets:
      AZURE_CREDENTIALS:
        required: true

jobs:
  terraform_kubernetes:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/modules/kubernetes/
    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Set Terraform Authentication
        run: |
          echo "ARM_CLIENT_ID=$(jq -r '.clientId' <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq -r '.clientSecret' <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(jq -r '.subscriptionId' <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(jq -r '.tenantId' <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
          echo "ARM_ACCESS_KEY=$(az storage account keys list --account-name mvp30backendsa --resource-group ts-rg-01 --query '[0].value' --output tsv)" >> $GITHUB_ENV

      - name: Terraform Plan
        run: terraform plan -out=plan.out -var-file=$GITHUB_WORKSPACE/terraform/environments/${{ inputs.environment }}-${{ inputs.application_instance }}-kubernetes.tfvars

      - name: Require Approval for Apply
        if: ${{ inputs.require_apply_approval == 'true' || inputs.environment == 'prod' }}
        run: echo "Waiting for approval in the GitHub Environment dashboard."

      - name: Terraform Apply
        if: ${{ inputs.require_apply_approval != 'true' || github.event.environment_approved }}
        run: terraform apply plan.out