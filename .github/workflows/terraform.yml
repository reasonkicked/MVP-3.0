name: Terraform and Deploy

on:
  push:
    branches:
      - 'master'
      - 'feature/**'

permissions:
  contents: read
  id-token: write

env:
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
  REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  IMAGE_NAME: 'mvp-3.0'

jobs:
  terraform:
    runs-on: ubuntu-latest
    #if: github.event_name == 'push' && contains(github.event.commits[0].message, '[skip terraform]')
    defaults:
      run:
        working-directory: 'terraform/modules/network/'
    steps:
      - uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init -backend-config="access_key=${{ env.ARM_ACCESS_KEY }}"
      - name: Terraform Plan
        run: terraform plan -var-file=non-pd.tfvars
      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file=non-pd.tfvars

  build_and_push_image:
    #needs: terraform
    if: github.event_name == 'push' && contains(github.event.commits[0].message, '[skip build]')

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to ACR
        uses: docker/login-action@v1
        with:
          registry: 'acrdvmvpem01acrweu01.azurecr.io' #needs to be a parameter
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/app/Dockerfile
          push: true
          tags: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

  deploy_to_aks:
    #needs: build_and_push_image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: List directory contents
        run: ls -la
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Set AKS context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: 'aks-dv-mvp-em01-aks-weu-01' #needs to be a parameter
          resource-group: 'rg-dv-mvp-em01-aks-weu-01' #needs to be a parameter
      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s/deployment.yml
          kubectl apply -f ./k8s/service.yml
